local a=loadstring(game:HttpGet'https://sirius.menu/rayfield')()
local b=a:CreateWindow{
Name="1 Hz ┃ Click to Build Simulator",
Icon=0,
LoadingTitle="Loading...",
LoadingSubtitle="by 1 Hz",
Theme="Dark Blue",

DisableRayfieldPrompts=false,
DisableBuildWarnings=false,

ConfigurationSaving={
Enabled=true,
FolderName=nil,
FileName="by 1 Hz"
},

Discord={
Enabled=true,
Invite="YERMQTRRmQ",
RememberJoins=false
},

KeySystem=true,
KeySettings={
Title="1 Hz ┃ Click to Build Simulator",
Subtitle="Key System",
Note="Join Discord For Get Key!",
FileName="Key",
SaveKey=false,
GrabKeyFromSite=true,
Key={"ILOVE_1Hz"}
}
}
a:Notify{
Title="1 Hz ┃ Click to Build Simulator",
Content="by 1 Hz",
Duration=6.5,
Image="check",
}

local c=b:CreateTab("Main","circle-play")
local d=b:CreateTab("Spin","rewind")
local e=b:CreateTab("Egg","egg")
local f=b:CreateTab("Build","wrench")

local g={}
local h={
"Starter Shack",
"Tiny House",
"Wizard Shack",
"Blacksmith",
"Stone House",
"Tall House",
"Cute House",
"Modern House",
"High Tech House",
"Modern Mansion"
}
local function NumberHandler(i)
return i:gsub("Starter Shack","1"):gsub("Tiny House","2"):gsub("Wizard Shack","3"):gsub("Blacksmith","4"):gsub("Stone House","5"):gsub("Tall House","6"):gsub("Cute House","7"):gsub("Modern House","8"):gsub("High Tech House","9"):gsub("Modern Mansion","10")
end
game:GetService"Workspace"
c:CreateToggle{
Name="Auto Click",
CurrentValue=false,
Flag="Toggle1",
Callback=function(i)
_G.Build=i
while wait()do
if _G.Build==false then break end
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
game:GetService"ReplicatedStorage".Packages.Knit.Services.ClickService.RF.Click:InvokeServer()
end
end,
}

c:CreateToggle{
Name="Auto Collect Dirt",
CurrentValue=false,
Flag="Toggle1",
Callback=function(i)
_G.d=i
while wait()do
if _G.d==false then break end
game:GetService"ReplicatedStorage".Packages.Knit.Services.PlotService.RE.DestroyedBlock:FireServer"Dirt"
end
end,
}

c:CreateToggle{
Name="Auto Claim Reward",
CurrentValue=false,
Flag="Toggle1",
Callback=function(i)
_G.cr=i
while wait()do
if _G.cr==false then break end
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(1)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(2)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(3)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(4)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(5)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(6)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(7)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(8)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(9)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(10)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(11)
game:GetService"ReplicatedStorage".Packages.Knit.Services.RewardService.RF.Claim:InvokeServer(12)
end
end,
}

c:CreateToggle{
Name="Auto Rebirth",
CurrentValue=false,
Flag="Toggle1",
Callback=function(i)
_G.rb=i
while wait()do
if _G.rb==false then break end
game:GetService"ReplicatedStorage".Packages.Knit.Services.RebirthService.RF.SimpleRebirth:InvokeServer()
end
end,
}

c:CreateButton{
Name="End Tutorial",
Callback=function()
game:GetService"ReplicatedStorage".Packages.Knit.Services.TutorialService.RF.TutorialCompleted:InvokeServer()
end,
}

d:CreateDropdown{
Name="Select spin",
Options={"Normal","Epic"},
CurrentOption={"Normal"},
MultipleOptions=false,
Flag="Dropdown1",
Callback=function(i)
_G._spin_type=i
end,
}

d:CreateToggle{
Name="Auto Spin",
CurrentValue=false,
Flag="Toggle1",
Callback=function(i)
_G.as=i
while wait()do
if _G.as==false then break end
game:GetService"ReplicatedStorage".Packages.Knit.Services.SpinService.RF.Spin:InvokeServer(_G._spin_type,false)
end
end,
}

e:CreateDropdown{
Name="Select egg",
Options=g,
CurrentOption=g[1],
MultipleOptions=false,
Flag="Dropdown1",
Callback=function(i)
_G._egg_type=i
end,
}

e:CreateToggle{
Name="Auto Hatch",
CurrentValue=false,
Flag="Toggle1",
Callback=function(i)
_G.ah=i
while wait()do
if _G.ah==false then break end
game:GetService"ReplicatedStorage".Packages.Knit.Services.EggOpeningService.RF.Hatch:InvokeServer("Single",_G._egg_type)
game:GetService"ReplicatedStorage".Packages.Knit.Services.EggOpeningService.RF.Skipped:InvokeServer()
end
end,
}

f:CreateDropdown{
Name="Select building",
Options=h,
CurrentOption=h[1],
MultipleOptions=false,
Flag="Dropdown1",
Callback=function(i)
_G._build_type=NumberHandler(i)
end,
}

f:CreateButton{
Name="Buy Building",
Callback=function()
game:GetService"ReplicatedStorage".Packages.Knit.Services.PlotService.RF.BuyBlueprint:InvokeServer(tonumber(_G._build_type))
end,
}

f:CreateToggle{
Name="Auto Sell Building",
CurrentValue=false,
Flag="Toggle1",
Callback=function(i)
_G.sb=i
while wait()do
if _G.sb==false then break end
game:GetService"ReplicatedStorage".Packages.Knit.Services.PlotService.RF.SellBuild:InvokeServer()
end
end,
}


local i=b:CreateTab("Misc","settings-2")
f:CreateToggle{
Name="AntiAFK",
CurrentValue=false,
Flag="Toggle1",
Callback=function(j)
_G.sb=j
while wait()do
if _G.sb==false then break end
function AntiAFK()
spawn(function()
while antiAFKEnabled do
local k=player.Character or player.CharacterAdded:Wait()
local l=k:FindFirstChild"HumanoidRootPart"

if l then

l.CFrame=l.CFrame*CFrame.new(0,0,math.random(-1,1))
end
wait(2)
end
end)
end
end
end,
}
i:CreateButton{
Name="Rejoin",
Callback=function()
local j=game:GetService"TeleportService"
local k=game:GetService"Players".LocalPlayer
j:Teleport(game.PlaceId,k)
end,
}
local j=b:CreateTab("Credits","cross")
j:CreateLabel"Join My discord For More Info!"
j:CreateButton{
Name="Copy Discord Link",
Callback=function()
setclipboard"https://discord.com/YERMQTRRmQ"
end,
}
